@using BlogProject.Enums
@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.ViewModels
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http.Extensions;

@inject IImageService imageService
@inject UserManager<BlogUser> userManager
@model PostDetailViewModel

@{
    ViewData["Title"] = "Post Details";
    var post = Model.Post;
    string fullUrl = $"{Context.Request.Path}{Context.Request.QueryString.Value}";
}

<div class="container px-5">
    <div class="row gx-5 justify-content-center">
        <div class="col-lg-10 col-xl-8">
            <div class="single-post">
                <h1>@post.Title</h1>
                <p class="lead">@post.Abstract</p>
                <div class="d-flex align-items-center justify-content-between mb-5">
                    <div class="single-post-meta me-4">
                        <img src="@imageService.DecodeImage(post.BlogAuthor.ImageData, post.BlogAuthor.ContentType)" alt="@post.BlogAuthor.FullName" class="mr-3 mt-3 rounded-pill img-thumbnail " style="width:60px;">
                        <div class="single-post-meta-details ms-2">
                            <div class="single-post-meta-details-name">@post.BlogAuthor.FullName</div>
                            @{
                                var date = @post.Updated ?? @post.Created;
                            }
                            <div class="single-post-meta-details-date">@date</div>
                        </div>
                    </div>
                    <div class="single-post-meta-links">
                        <a href="https://www.linkedin.com/in/adam-shively-42162a239/" target="_blank"><i class="fab fa-linkedin fa-fw"></i></a>
                        <a href="https://github.com/AdamShively/" target="_blank"><i class="fab fa-github fa-fw"></i></a>
                        <a href="https://www.youtube.com/channel/UCoyDVmowhwAFrvyqU6p4w3w" target="_blank"><i class="fab fa-youtube fa-fw"></i></a>
                    </div>
                </div>
                <div class="single-post-text my-5">
                    @Html.Raw(@Model.Post.Content)
                    <div class="text-center"><a class="btn btn-transparent-dark" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@post.BlogId">Back to Blog Overview</a></div>
                </div>
            </div>

            <article>
                <hr />
                <h3 class="text-center font-weight-bold">Tags</h3>
                <div class="col text-center">
                    @foreach (var tag in Model.Post.Tags.ToList())
                    {
                        <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="mb-1 btn btn-sm btn-darkgray text-light">#@tag.Text</a>
                    }
                </div>
            </article>

            @if (User.Identity.IsAuthenticated)
            {
                <form asp-action="Create" asp-controller="Comments" method="post">
                    @Html.Hidden("PostId", Model.Post.Id)
                    @Html.Hidden("Slug", Model.Post.Slug)

                    <div class="form-group">
                        <label class="h2 control-label font-weight-bold">Add Comment</label>
                        <textarea name="body" class="form-control" rows="10"></textarea>
                    </div>

                    <button type="submit" class="btn-sm btn-purple float-right fw-bold w-25 mt-2 mb-4">SUBMIT</button>
                </form>
            }
            else
            {
                <a class="btn btn-purple btn-sm fw-bold w-100 my-4" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@fullUrl">
                    Login to Add a Comment
                </a>
            }

            @{
                int commentCount = Model.Post.Comments.Count;
                string pleural = (commentCount > 1 || commentCount < 1) ? "COMMENTS" : "COMMENT";
            }

            <span id="commentSection" class="btn bg-gray-800 btn-sm text-light w-100 mb-1">@commentCount @pleural</span>

            @foreach (var comment in Model.Post.Comments.OrderByDescending(c => c.Created))
            {
                <div class="media p-3 mb-2 bg-orange-light media-border">
                    <img src="@imageService.DecodeImage(comment.BlogAuthor.ImageData, comment.BlogAuthor.ContentType)" alt="@comment.BlogAuthor.FullName" class="mr-3 mt-3 rounded-pill img-thumbnail " style="width:60px;">

                    <div class="media-body">
                        <h4>@comment.BlogAuthor.FullName</h4>

                        @*Post date or updated date*@
                        @if (comment.Deleted is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString()
                            </span>
                        }
                        else if (comment.Moderated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">
                                    Moderated <span class="text-danger font-italic">(@comment.ModerationReason.ToString().ToLower())</span>
                                </span>
                                : @comment.Moderated?.ToString()
                            </span>
                        }
                        else if (comment.Updated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Updated </span> : @comment.Updated?.ToString()
                            </span>
                        }
                        else
                        {
                            <span class="small">
                                <span class="font-weight-bolder">Created </span> : @comment.Created.ToString()
                            </span>
                        }

                        @*If a moderator has updated or deleted post*@
                        <br />
                        @if (comment.Deleted is not null)
                        {
                            <span class="small font-italic">The comment posted on @comment.Created.ToString() by @comment.BlogAuthor.FullName was deleted by the Moderator...</span>
                        }
                        else if (comment.Moderated is not null)
                        {
                            <span class="small font-italic">The comment posted on @comment.Created.ToString() by @comment.BlogAuthor.FullName has been Moderated...</span>
                        }

                        <hr />

                        @*Determine how and if body is displayed*@
                        @if (string.IsNullOrEmpty(comment.Body))
                        {
                            <span class="small font-italic">Comment not available...</span>
                        }
                        else if (comment.Moderated is not null)
                        {
                            @comment.ModeratedBody
                        }
                        else if (comment.Deleted is null)
                        {
                            @comment.Body
                        }


                        @*Determine if edit button is rendered*@
                        @if (comment.Moderated is null && comment.Deleted is null && comment.BlogAuthorId == userManager.GetUserId(User))
                        {
                            <hr>
                            <button data-bs-toggle="modal" data-bs-target="#editModal_@comment.Id" class="btn-sm btn-purple float-right fw-bold w-25">EDIT</button>
                        }
                        @*Determine if moderate and delete buttons are rendered*@
                        @if (User.IsInRole(UserRole.Moderator.ToString()) || User.IsInRole(UserRole.AdminModDemo.ToString()) && comment.Deleted is null)
                        {
                            <hr>
                            <div class="row">
                                <div class="col-2">
                                    <button class="btn-sm btn-dark font-weight-bold w-100" data-bs-toggle="modal" data-bs-target="#moderateModal_@comment.Id">MODERATE</button>
                                </div>
                                <div class="col-2">
                                    <button class="btn-sm btn-dark font-weight-bold w-100" data-bs-toggle="modal" data-bs-target="#deleteModal_@comment.Id">DELETE</button>
                                </div>
                            </div>
                        }

                    </div>
                </div>

                @*Delete Modal*@
                <div class="modal" id="deleteModal_@comment.Id">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header bg-light">
                                <h4 class="modal-title">Delete Comment</h4>

                            </div>

                            <!-- Modal body -->
                            <div class="modal-body bg-light-gray">
                                <form asp-action="Delete" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)
                                    @Html.Hidden("Slug", comment.Post.Slug)

                                    <div class="form-group mb-3">
                                        <p>WARNING! You are about to delete a comment.</p>
                                        <p>This is permanent.</p>
                                    </div>
                                    <!-- Modal footer -->
                                    <div class="modal-footer form-group bg-light">
                                        <button class="btn btn-purple btn-sm fw-bold" type="submit">DELETE</button>
                                        <button type="button" class="btn btn-purple btn-sm fw-bold" data-bs-dismiss="modal">CLOSE</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                @*Edit Modal*@
                <div class="modal" id="editModal_@comment.Id">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header bg-light">
                                <h4 class="modal-title">Edit Comment</h4>

                            </div>

                            <!-- Modal body -->
                            <div class="modal-body bg-light-gray">
                                <form asp-action="Edit" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)

                                    <div class="form-group">
                                        <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                                    </div>
                                    <!-- Modal footer -->
                                    <div class="modal-footer form-group bg-light">
                                        <button class="btn btn-purple btn-sm fw-bold" type="submit">SUBMIT</button>
                                        <button type="button" class="btn btn-purple btn-sm fw-bold" data-bs-dismiss="modal">CLOSE</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                @*Moderate Modal*@
                <div class="modal" id="moderateModal_@comment.Id">
                    <div class="modal-dialog">
                        <div class="modal-content">

                            <!-- Modal Header -->
                            <div class="modal-header">
                                <h4 class="modal-title">Moderate Comment</h4>

                            </div>

                            <!-- Modal body -->
                            <div class="modal-body">
                                <form asp-action="Moderate" asp-controller="Comments">
                                    @Html.Hidden("Id", comment.Id)
                                    @Html.Hidden("Body", comment.Body)

                                    <div class="form-group">
                                        <label class="control-label">Original Comment</label>
                                        <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Moderated Comment</label>
                                        <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Reason For Moderation</label>
                                        <select class="form-control" asp-for="@comment.ModerationReason" name="ModerationReason" asp-items="Html.GetEnumSelectList<ModerationReason>()"></select>
                                    </div>

                                    <div class="modal-footer form-group bg-light">
                                        <button class="btn btn-purple btn-sm fw-bold" type="submit">SUBMIT</button>
                                        <button type="button" class="btn btn-purple btn-sm fw-bold" data-bs-dismiss="modal">CLOSE</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>